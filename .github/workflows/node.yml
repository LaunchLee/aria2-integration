name: Node

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Clone repository

      - uses: actions/setup-node@v3
        name: Setup node
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Build Firefox Extension
        run: npm run build:firefox

      - uses: actions/upload-artifact@v3
        name: Upload Firefox artifact
        with:
          name: aria2-integration-firefox
          path: ./build/

      - name: Build Chromium Extension
        run: npm run build:chromium

      - uses: actions/upload-artifact@v3
        name: Upload Chromium artifact
        with:
          name: aria2-integration-chromium
          path: ./build/
  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Release v')
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        name: Clone Repository

      - name: Get Release Version
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          echo "::set-output name=VERSION::$(echo $COMMIT_MESSAGE | grep -Po 'v\d+\.\d+\.\d+')"
        id: version

      - uses: rickstaa/action-create-tag@87a112438ed8b80a2ae25dcf8f11d4949dc4f740 # v1
        name: Create Tag
        env:
          VERSION: $(echo $COMMIT_MESSAGE | grep -Po "v\d+\.\d+\.\d+")
        with:
          tag: ${{ steps.version.outputs.VERSION }}
          message: ${{ github.event.head_commit.message }}
